pipeline {
  agent {
    label 'multi-platform'
  }
  stages {
    stage("Verify") {
      steps {
        sh '''
          docker version
          docker info
          docker compose version 
        '''
      }
    }
    stage('System prune Docker data') {
      steps {
        sh 'docker system prune -a --volumes -f'
      }
    }
    stage('Deploy App - Docker Compose') {
      steps {
        sh 'docker compose -f examples/02-docker/07-docker-compose/docker-compose.yaml up &'
        sh 'docker compose -f examples/02-docker/07-docker-compose/docker-compose.yaml ps'
      }
    }
    stage('Test the container app') {
      steps {
          script{
            withDockerContainer(args: '--network 07-docker-compose_default', image: 'brainupgrade/tshoot') {  
                          sh 'curl 07-docker-compose-echo-server-1:8080'

            }
        }
      }
    }
  }
  post {
    always {
      sh 'docker compose  -f examples/02-docker/07-docker-compose/docker-compose.yaml down'
      sh 'docker compose  -f examples/02-docker/07-docker-compose/docker-compose.yaml kill'
      sh "docker ps -q | xargs -I {} docker stop {}"
      sh "docker ps -a -q | xargs -I {} docker rm {}"
      sh 'docker network prune -f '
    }
  }
}
